var I=Object.defineProperty;var y=(l,e,s)=>e in l?I(l,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):l[e]=s;var o=(l,e,s)=>(y(l,typeof e!="symbol"?e+"":e,s),s);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const a of t)if(a.type==="childList")for(const n of a.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function s(t){const a={};return t.integrity&&(a.integrity=t.integrity),t.referrerPolicy&&(a.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?a.credentials="include":t.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(t){if(t.ep)return;t.ep=!0;const a=s(t);fetch(t.href,a)}})();var h=(l=>(l[l.active=1]="active",l[l.pause=2]="pause",l[l.game_over=3]="game_over",l[l.new=4]="new",l))(h||{});const r={play:"play",resume:"resume",restart:"restart",score:"score",settings:"settings",saveSettings:"saveSettings",close:"close"},b={[r.play]:"Начать",[r.resume]:"Продолжить",[r.restart]:"Начать заново",[r.score]:"Результаты",[r.settings]:"Настройки",[r.saveSettings]:"Сохранить",[r.close]:"Назад"},u="TETRIS_SCORE",f="TETRIS_SETTINGS",m={small:"small",middle:"middle",large:"large"},d={[m.small]:{cols:7,rows:14},[m.middle]:{cols:10,rows:20},[m.large]:{cols:15,rows:30}};let x=class{constructor(e,s){o(this,"rows");o(this,"cols");o(this,"blockTypes",{I:[[0,0,0,0],["I","I","I","I"],[0,0,0,0],[0,0,0,0]],J:[["J",0,0],["J","J","J"],[0,0,0]],L:[[0,0,"L"],["L","L","L"],[0,0,0]],O:[["O","O"],["O","O"]],S:[[0,"S","S"],["S","S",0],[0,0,0]],T:[[0,"T",0],["T","T","T"],[0,0,0]],Z:[["Z","Z",0],[0,"Z","Z"],[0,0,0]]});o(this,"pointsCount",{1:100,2:300,3:700,4:1500});o(this,"status",h.new);o(this,"space",[]);o(this,"totalPoint",0);o(this,"activeItem");o(this,"nextItem");this.rows=e,this.cols=s,this.activeItem=this.createItem(),this.nextItem=this.createItem()}updateSpaceSize({rows:e,cols:s}){this.rows=e,this.cols=s}get speed(){const e=Math.ceil((100-this.totalPoint/100)/10)*70;return Math.max(e,100)}get getStatus(){return this.status}createSpace(e,s){const i=[];for(let t=0;t<e;t++){i.push([]);for(let a=0;a<s;a++)i[t].push(0)}return i}createItem(){const e=Object.keys(this.blockTypes),s=e[Math.floor(Math.random()*e.length)],i=this.blockTypes[s];return{x:Math.floor(this.cols/2-i.length/2),y:-1,block:i}}lockItem(){const{x:e,y:s,block:i}=this.activeItem;for(let t=0;t<i.length;t++)for(let a=0;a<i[t].length;a++)t+s<0?this.gameOver():i[t][a]&&(this.space[t+s][a+e]=i[t][a])}blockIsOffset(){const{x:e,y:s,block:i}=this.activeItem;for(let t=0;t<i.length;t++)for(let a=0;a<i[t].length;a++)if(i[t][a]&&(this.space[s+t]===void 0||this.space[s+t][e+a]===void 0||this.space[s+t][e+a]))return!0;return!1}moveItemLeft(){this.activeItem.x-=1,this.blockIsOffset()&&(this.activeItem.x+=1)}moveItemRight(){this.activeItem.x+=1,this.blockIsOffset()&&(this.activeItem.x-=1)}moveItemDown(){this.activeItem.y+=1,this.blockIsOffset()&&(this.activeItem.y-=1,this.lockItem(),this.updateSpaceBlock(),this.clearLines())}rotateItem(){const{block:e}=this.activeItem,s=e.length,i=this.createSpace(s,s);for(let t=0;t<s;t++)for(let a=0;a<s;a++)i[a][t]=e[s-1-t][a];this.activeItem.block=i,this.blockIsOffset()&&(this.activeItem.block=e)}getPlaySpace(){this.space.length||(this.space=this.createSpace(this.rows,this.cols));const e=JSON.parse(JSON.stringify(this.space)),{x:s,y:i,block:t}=this.activeItem;return t.forEach((a,n)=>{a.forEach((c,g)=>{c&&e[i+n]&&(e[i+n][s+g]=c)})}),e}updateSpaceBlock(){this.activeItem=this.nextItem,this.nextItem=this.createItem()}clearLines(){const e=this.getPlaySpace(),s=e.length,i=e[0].length,t=[],a=new Array(this.cols).fill(0,0);for(let c=s-1;c;c--)e[c].filter(w=>w).length===i&&t.push(c);t.forEach((c,g)=>{this.space.splice(c+g,1),this.space.unshift([...a])}),this.totalPoint+=this.pointsCount[t.length]||0;const n=Number(localStorage.getItem(u)||0);return localStorage.setItem(u,`${Math.max(this.totalPoint,n)}`),t.length&&this.clearLines(),!0}gameOver(){this.status=h.game_over}restart(){this.activeItem=this.createItem(),this.space=this.createSpace(this.rows,this.cols),this.totalPoint=0}setScore(){const e=document.getElementById("tetris__info"),s=e.querySelector(".score");s.innerHTML=`${this.totalPoint}`;const i=localStorage.getItem(u),t=e.querySelector(".record");t.innerHTML=` ${i||0}`}},k=class{constructor(e,s,i,t,a){o(this,"element");o(this,"width");o(this,"height");o(this,"context");o(this,"nextElemCanvas");o(this,"cellWidth");o(this,"rows");o(this,"cols");o(this,"itemColor",{I:"cyan",J:"blue",L:"orange",O:"yellow",S:"green",T:"purple",Z:"red"});this.element=e,this.width=s,this.height=i,this.rows=t,this.cols=a;const n=document.createElement("canvas");n.width=this.width,n.height=this.height,this.element.appendChild(n),this.context=n.getContext("2d"),this.cellWidth=this.width/this.cols;const c=document.createElement("canvas");c.width=60,c.height=60,c.setAttribute("id","canvas-next"),this.element.appendChild(c),this.nextElemCanvas=c.getContext("2d")}updateSpaceSize({rows:e,cols:s}){this.rows=e,this.cols=s,this.cellWidth=this.width/this.cols}render(e){this.clearPlaySpace(),this.renderGameSpace(e)}clearPlaySpace(){this.context.clearRect(0,0,this.width,this.height)}renderGameSpace(e){for(let s=0;s<this.rows;s++)for(let i=0;i<this.cols;i++)this.context.fillStyle=this.itemColor[e[s][i]]||"white",this.context.fillRect(i*this.cellWidth,s*this.cellWidth,this.cellWidth,this.cellWidth),this.context.strokeStyle="#fafafa",this.context.lineWidth=1,this.context.strokeRect(i*this.cellWidth,s*this.cellWidth,this.cellWidth,this.cellWidth)}renderNextItem(e){var s;for(let i=0;i<this.rows;i++)for(let t=0;t<this.cols;t++)this.nextElemCanvas.fillStyle=this.itemColor[(s=e==null?void 0:e[i])==null?void 0:s[t]]||"white",this.nextElemCanvas.fillRect(t*this.cellWidth/2,i*this.cellWidth/2,this.cellWidth/2,this.cellWidth/2),this.nextElemCanvas.strokeStyle="#fafafa",this.nextElemCanvas.lineWidth=1,this.nextElemCanvas.strokeRect(t*this.cellWidth/2,i*this.cellWidth/2,this.cellWidth/2,this.cellWidth/2)}},E=class{constructor(e,s,i,t){o(this,"menu");o(this,"controller");o(this,"game");o(this,"view");o(this,"settings");this.menu=e,this.controller=s,this.game=i,this.view=t,e.addEventListener("click",this.menuClick.bind(this)),this.settings=this.getSettings(),this.watchGameStatus()}menuClick(e){var s,i;if(e.target.tagName.toLowerCase()==="button")switch(e.target.dataset.status){case r.play:case r.resume:{this.controller.startGame();break}case r.restart:{this.game.restart(),this.controller.startGame();break}case r.score:{const t=Number(localStorage.getItem(u)||0);this.showScore(Math.max(t,this.game.totalPoint));break}case r.settings:{this.showSettingMenu();break}case r.close:{this.changeStatus(this.game.status);break}case r.saveSettings:{this.settings.name=(s=document.querySelector("#name"))==null?void 0:s.value,this.settings.size=(i=document.querySelector("#size"))==null?void 0:i.value,this.game.updateSpaceSize(d[this.settings.size]),this.view.updateSpaceSize(d[this.settings.size]),this.saveSettings(),this.game.restart(),this.changeStatus(h.new);break}default:console.log("status",e.target.dataset.status)}}setMenuButtons(e){const s=this.menu.querySelector(".menu__list");s.innerHTML="",e.forEach(i=>{s.insertAdjacentHTML("beforeend",`
        <li>
          <button data-status="${i}" class="menu__item">${b[i]}</button>
        </li>
      `)})}watchGameStatus(){let e=this.game.status;this.changeStatus(e),setInterval(()=>{e!==this.game.getStatus&&(e=this.game.getStatus,this.changeStatus(e))},100)}changeStatus(e){switch(e){case h.pause:this.setMenuButtons([r.resume,r.restart,r.score,r.settings]),this.menu.style.display="flex";break;case h.game_over:this.setMenuButtons([r.restart,r.score,r.settings]),this.menu.style.display="flex";break;case h.new:this.setMenuButtons([r.play,r.score,r.settings]),this.menu.style.display="flex";break;default:this.menu.style.display="none"}}showScore(e){const s=this.menu.querySelector(".menu__list");this.setMenuButtons([r.close]),s.insertAdjacentHTML("afterbegin",`
      <li>Ваш максимально набранный балл: <b>${e}</b></li>
    `)}showSettingMenu(){const e=this.menu.querySelector(".menu__list");this.setMenuButtons([r.saveSettings,r.close]),e.insertAdjacentHTML("afterbegin",`
      <li class="menu__item-setting">
        <label for="name">Имя пользователя</label>
        <input id="name" value="${this.settings.name||"Пользователь"}">
      </li>
      <li class="menu__item-setting">
        <label for="size">Размер поля</label>
        <select id="size">
          <option
            ${this.settings.size===m.small?"selected":""}
            value="${m.small}"
          >Маленький (7x14)</option>
          <option
            ${!this.settings.size||this.settings.size===m.middle?"selected":""}
            value="${m.middle}"
          >Средний (10x20)</option>
          <option
            ${this.settings.size===m.large?"selected":""}
            value="${m.large}"
          >Большой (15x30)</option>
        </select>
      </li>
    `)}getSettings(){return JSON.parse(localStorage.getItem(f)||"{}")}saveSettings(){localStorage.setItem(f,JSON.stringify(this.settings))}},L=class{constructor(e,s){o(this,"game",{});o(this,"view",{});o(this,"gameProcess",0);o(this,"currentSpeed",0);this.game=e,this.view=s,document.addEventListener("keydown",this.setKeydownListeners.bind(this))}setKeydownListeners(e){if(this.game.status===h.active)switch(e.key){case"Escape":clearInterval(this.gameProcess),this.game.status=h.pause;break;case"ArrowLeft":this.game.moveItemLeft(),this.view.render(this.game.getPlaySpace());break;case"ArrowRight":this.game.moveItemRight(),this.view.render(this.game.getPlaySpace());break;case"ArrowDown":this.game.moveItemDown(),this.game.setScore(),this.currentSpeed!==this.game.speed&&(clearInterval(this.gameProcess),this.gameProcess=setInterval(this.playing.bind(this),this.game.speed)),Number(this.game.status)===h.game_over?clearInterval(this.gameProcess):(this.view.render(this.game.getPlaySpace()),this.view.renderNextItem(this.game.nextItem.block));break;case"ArrowUp":this.game.rotateItem(),this.view.render(this.game.getPlaySpace());break;default:return null}else e.key==="Enter"&&this.startGame()}startGame(){this.view.render(this.game.getPlaySpace()),this.view.renderNextItem(this.game.nextItem.block),this.game.status===h.game_over&&this.game.restart(),this.game.status=h.active,this.playing(),this.currentSpeed=this.game.speed,this.gameProcess=setInterval(this.playing.bind(this),this.game.speed)}playing(){this.game.moveItemDown(),this.game.setScore(),this.game.status===h.game_over?clearInterval(this.gameProcess):(this.view.render(this.game.getPlaySpace()),this.view.renderNextItem(this.game.nextItem.block))}};const _=document.getElementById("tetris"),O=document.getElementById("menu"),P=JSON.parse(localStorage.getItem(f)||"{}"),p=d[P.size]||d[m.middle],v=new x(p.rows,p.cols),S=new k(_,320,640,p.rows,p.cols),M=new L(v,S);new E(O,M,v,S);
